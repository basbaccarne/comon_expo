[
    {
        "id": "1f0c85d915d32d66",
        "type": "tab",
        "label": "CityTraQ flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3217f22e5516eaee",
        "type": "mqtt in",
        "z": "1f0c85d915d32d66",
        "name": "/citytraq",
        "topic": "/citytraq",
        "qos": "2",
        "datatype": "json",
        "broker": "37c0ae53ce08c97f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 100,
        "wires": [
            [
                "ef0e760460f80bab",
                "160e4e5e1745fbec"
            ]
        ]
    },
    {
        "id": "f00562e195637c5b",
        "type": "influxdb out",
        "z": "1f0c85d915d32d66",
        "influxdb": "63f8d2c01a90d135",
        "name": "",
        "measurement": "interface_data",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 790,
        "y": 100,
        "wires": []
    },
    {
        "id": "ef0e760460f80bab",
        "type": "change",
        "z": "1f0c85d915d32d66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"by car\": msg.payload.byCar,\t    \"by foot\": msg.payload.onFoot,\t    \"by bike\": msg.payload.byBike\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 100,
        "wires": [
            [
                "f00562e195637c5b",
                "b5d2417669ba51d7"
            ]
        ]
    },
    {
        "id": "b5d2417669ba51d7",
        "type": "debug",
        "z": "1f0c85d915d32d66",
        "name": "debug grafana out",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "160e4e5e1745fbec",
        "type": "debug",
        "z": "1f0c85d915d32d66",
        "name": "debug MQQT in",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 420,
        "y": 160,
        "wires": []
    },
    {
        "id": "2255f84facbeda77",
        "type": "comment",
        "z": "1f0c85d915d32d66",
        "name": "MQTT Broker",
        "info": "This part of the node-RED script \nlistens for incoming MQTT data \non topic /citytraq \nand stores this data \nin a grafana database",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "78e0039c90d5c64c",
        "type": "comment",
        "z": "1f0c85d915d32d66",
        "name": "protopie server",
        "info": "I had to re√Ønstall nodejs and restart the docker\nLikewise for \n~ $ npm install socket.io-client\n\nip\nhttp://192.168.0.206\n\nname to listen for\nppMessage",
        "x": 240,
        "y": 280,
        "wires": []
    },
    {
        "id": "32ad8d7cfbc32b5b",
        "type": "socketio-connector",
        "z": "1f0c85d915d32d66",
        "server": "702b8cdde6b177c6",
        "namespace": "",
        "transport": "",
        "name": "socket.io connector",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "f9023a55b66babf7"
            ]
        ]
    },
    {
        "id": "f9023a55b66babf7",
        "type": "socketio-listener",
        "z": "1f0c85d915d32d66",
        "eventname": "ppMessage",
        "name": "",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "721ef9dfcd40ef15",
                "0bea9cf62d811ad1"
            ]
        ]
    },
    {
        "id": "721ef9dfcd40ef15",
        "type": "debug",
        "z": "1f0c85d915d32d66",
        "name": "debug socketio in",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "4ef1f40b27b33df9",
        "type": "socketio-emitter",
        "z": "1f0c85d915d32d66",
        "name": "ppMessage",
        "x": 1350,
        "y": 320,
        "wires": []
    },
    {
        "id": "0bea9cf62d811ad1",
        "type": "switch",
        "z": "1f0c85d915d32d66",
        "name": "",
        "property": "payload.messageId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "update_hi5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 320,
        "wires": [
            [
                "4c74f1cf7eaa335f"
            ],
            [
                "3be2c3ec4afd6a2e"
            ]
        ]
    },
    {
        "id": "4c74f1cf7eaa335f",
        "type": "function",
        "z": "1f0c85d915d32d66",
        "name": "test",
        "func": "msg.payload = { \n    messageId: 'response', \n    value: 'data received',\n    fromName: 'this is it!'\n};\nmsg.eventName = 'ppMessage';\nmsg.connectionName = 'socket.io connector';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "4ef1f40b27b33df9"
            ]
        ]
    },
    {
        "id": "3be2c3ec4afd6a2e",
        "type": "influxdb in",
        "z": "1f0c85d915d32d66",
        "influxdb": "4573ab738ea670b2",
        "name": "update_hi5",
        "query": "SELECT LAST(*) FROM \"interface_data\"",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "78e6e01f0ecc0752"
            ]
        ]
    },
    {
        "id": "78e6e01f0ecc0752",
        "type": "function",
        "z": "1f0c85d915d32d66",
        "name": "deliver 3 data points",
        "func": "// Parse the input data\nlet inputData = msg.payload[0];\n\n// Create separate messages for each mode of transport\nlet byBikeMsg = {\n    payload: {\n        messageId: 'byBike',\n        value: inputData[\"last_by bike\"],\n        fromName: 'node-RED'\n    },\n    eventName: 'ppMessage',\n    connectionName: 'socket.io connector'\n};\n\nlet byCarMsg = {\n    payload: {\n        messageId: 'byCar',\n        value: inputData[\"last_by car\"],\n        fromName: 'node-RED'\n    },\n    eventName: 'ppMessage',\n    connectionName: 'socket.io connector'\n};\n\nlet byFootMsg = {\n    payload: {\n        messageId: 'onFoot',\n        value: inputData[\"last_by foot\"],\n        fromName: 'node-RED'\n    },\n    eventName: 'ppMessage',\n    connectionName: 'socket.io connector'\n};\n\n// Return the messages as an array\nreturn [byBikeMsg, byCarMsg, byFootMsg];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "4ef1f40b27b33df9"
            ],
            [
                "4ef1f40b27b33df9"
            ],
            [
                "4ef1f40b27b33df9"
            ]
        ]
    },
    {
        "id": "37c0ae53ce08c97f",
        "type": "mqtt-broker",
        "name": "MQTT server",
        "broker": "192.168.0.155",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "63f8d2c01a90d135",
        "type": "influxdb",
        "hostname": "192.168.0.155",
        "port": 8086,
        "protocol": "http",
        "database": "citytraq",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "702b8cdde6b177c6",
        "type": "socketio-config",
        "host": "http://192.168.0.206",
        "port": "9981",
        "reconnection": true
    },
    {
        "id": "4573ab738ea670b2",
        "type": "influxdb",
        "hostname": "192.168.0.155",
        "port": 8086,
        "protocol": "http",
        "database": "citytraq",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    }
]
